{
  "zh-cn": [
    {
      "filename": "addBlog.md",
      "__html": "<h2>添加博客</h2>\n<h3>放置位置</h3>\n<p>根据文档对应的语言版本，放入<code>blog</code>目录下的<code>zh-cn</code>或者<code>en-us</code>，可以是一层或者多层目录。</p>\n<h3>博客列表页配置</h3>\n<p>文档放入对应语言的目录中后，需要在<code>site_config/blog.js</code>中配置。其中的<code>link</code>字段用于配置访问地址，格式为<code>/blog/path-to-the-md</code>，需要注意的是这个路径不要包括语言路径（<code>zh-cn</code>或<code>en-us</code>）。</p>\n<p>例如，某个博客的存放位置为<code>root_directory/blog/en-us/demo/xxx.md</code>，那么<code>link</code>字段的配置值为<code>/blog/demo/xxx.md</code>。</p>\n"
    },
    {
      "filename": "addDoc.md",
      "__html": "<h2>添加文档</h2>\n<p>文档编写完成后，需要将其添加到页面当中。</p>\n<h3>放置位置</h3>\n<p>根据文档对应的语言版本，放入<code>docs</code>目录下的<code>zh-cn</code>或者<code>en-us</code>，可以是一层或者多层目录。</p>\n<h3>菜单配置</h3>\n<p>文档放入对应语言的目录中后，需要在<code>site_config/docs.js</code>中配置。其中的<code>link</code>字段用于配置访问地址，格式为<code>/docs/path-to-the-md</code>，需要注意的是这个路径不要包括语言路径（<code>zh-cn</code>或<code>en-us</code>）。</p>\n<p>例如，某个文档的存放位置为<code>root_directory/docs/en-us/demo/xxx.md</code>，那么<code>link</code>字段的配置值为<code>/docs/demo/xxx.md</code>。</p>\n"
    },
    {
      "filename": "commandLine.md",
      "__html": "<h2>命令行使用</h2>\n<p><code>docsite</code>集成的主要命令只有三个，主要如下：</p>\n<h3><code>docsite init</code></h3>\n<p>在项目根目录下执行该命令，会在目录下初始化一个站点开发模板并安装好相关依赖。</p>\n<h3><code>docsite start</code></h3>\n<p>执行该命令，会在本地启动一个开发服务器，端口号为<code>8080</code>。同时会在浏览器中自动打开该页面。在开发过程中，修改源代码包括markdown文档时，会自动进行编译，刷新浏览器即可看到更新后的结果。</p>\n<h3><code>docsite build</code></h3>\n<p>待本地开发完成后，运行该命令，将对源码和markdown文档进行编译和构建，生成构建后的文件。</p>\n<h3>其他</h3>\n<p>执行<code>docsite -h</code>获取更多命令的使用</p>\n"
    },
    {
      "filename": "create.md",
      "__html": "<h2>创建站点</h2>\n<blockquote>\n<p>在做好前面的准备工作后，现在可以着手定义属于你自己的站点了。</p>\n</blockquote>\n<p>在项目根目录下执行<code>docsite start</code>命令，会在浏览器中自动打开页面。</p>\n<p>初始化生成的模板工程默认集成了首页、文档页、博客列表页、博客详情页、社区页及中英文国际化功能。可以按照需求自行添加和删除页面。</p>\n<h3>添加文档</h3>\n<ol>\n<li>将对应的<code>.md</code>或者<code>.markdown</code>文件放进<code>docs</code>文件夹下的对应语言目录中，支持多级目录存放</li>\n<li>在<code>site_config</code>文件夹下的<code>docs.js</code>中配置文档的菜单项</li>\n</ol>\n<h3>添加博客</h3>\n<ol>\n<li>将对应的<code>.md</code>或者<code>.markdown</code>文件放进<code>blog</code>文件夹下的对应语言目录中，支持多级目录存放</li>\n<li>在<code>site_config</code>文件夹下的<code>blog.js</code>中配置博客的列表项</li>\n</ol>\n<blockquote>\n<p>markdown文件均支持在文档顶部自定义元数据，顶部的<code>---</code>（至少三个<code>-</code>）之间的数据会被认为是元数据，一个key占用一行。这些数据解析后会对应存放在<code>md_json</code>文件夹下的<code>blog.json</code>和<code>docs.json</code>文件中，其中<code>filename</code>和<code>__html</code>为保留字段，请勿使用。</p>\n</blockquote>\n<pre><code>---\nkey1: hello\nkey2: world\n---\n\nyour markdown content\n</code></pre>\n<h3>自定义页面</h3>\n<ol>\n<li>如果想增加页面，在<code>pages</code>目录下增加相应的页面，并在<code>src</code>目录下的<code>index.jsx</code>文件中配置对应的路由，同步在<code>site_config</code>文件夹下增加对应的页面配置</li>\n<li>如果想修改页面，在<code>pages</code>目录下针对修改对应的页面，并同步修改<code>site_config</code>文件夹下对应的页面配置</li>\n<li>如果想删除页面，在<code>pages</code>目录下删除相应的页面，并在<code>src</code>目录下的<code>index.jsx</code>文件中删除对应的路由，同步在<code>site_config</code>文件夹下删除对应的页面配置</li>\n<li>如果想修改站点的整体色调，请修改<code>src</code>目录下的<code>variables.scss</code></li>\n<li>如果想修改markdown文档的样式，请修改<code>src</code>目录下的<code>markdown.scss</code></li>\n</ol>\n<h3>页面标签及站点ico</h3>\n<p>修改根目录下的<code>index.html</code>中的<code>&lt;title&gt;页面标签标题&lt;/title&gt;</code>和<code>&lt;link rel=&quot;icon&quot; href=&quot;./img/dubbo.ico&quot;&gt;</code>的<code>href</code>属性。</p>\n"
    },
    {
      "filename": "customStyle.md",
      "__html": "<h2>自定义样式</h2>\n<p>自定义样式分为整个站点的自定义和文档展示风格的自定义。</p>\n<h3>站点自定义</h3>\n<p><code>src</code>目录下的<code>variables.scss</code>文件中，定义了一些用于控制站点整体显示风格的一些scss变量。通过修改这些变量，能够获得不同风格的站点。</p>\n<p>当然，如果这样还觉得不满足需求，可以进入到每个具体的页面的样式文件中去修改。</p>\n<h3>文档展示风格自定义</h3>\n<p><code>src</code>目录下的<code>markdown.scss</code>文件中，定义了文档展示风格的样式。分为两部分，文档的展示和代码高亮的展示。</p>\n<ul>\n<li>文档的展示</li>\n</ul>\n<p>默认采用github风格<a href=\"https://github.com/sindresorhus/github-markdown-css\">https://github.com/sindresorhus/github-markdown-css</a>，如果想要其他风格，请修改<code>markdown.scss</code>文件。</p>\n<ul>\n<li>代码高亮</li>\n</ul>\n<p>在<a href=\"https://highlightjs.org/static/demo/\">https://highlightjs.org/static/demo/</a>中去选择喜爱的高亮配色，然后根据选择后的主题名称，在<a href=\"https://github.com/isagalaev/highlight.js/tree/master/src/styles\">https://github.com/isagalaev/highlight.js/tree/master/src/styles</a>中复制对应的样式文件到<code>markdown.scss</code>中即可。</p>\n"
    },
    {
      "filename": "doc.md",
      "__html": "<h2>文档编写</h2>\n<h3>元数据</h3>\n<p>markdown文件均支持在文档顶部自定义元数据，顶部的<code>---</code>（至少三个<code>-</code>）之间的数据会被认为是元数据，一个key占用一行。这些数据解析后会对应存放在<code>md_json</code>文件夹下，blog的文档对应<code>blog.json</code>文件，docs下的文档对应<code>docs.json</code>文件，其中<code>filename</code>和<code>__html</code>为保留字段，请勿使用。</p>\n<pre><code>---\nkey1: hello\nkey2: world\n---\n</code></pre>\n<h3>路径</h3>\n<p>在编写markdown文档时，难免需要文档之间的相互引用。而相对地址的写法相比于绝对地址，对于站点内文档之间的引用显得更为便捷。</p>\n<p>当需要引用其他文档时，引用路径按照在项目目录的相对文件地址引用即可。</p>\n<p>同样的，当需要引用项目内的图片资源，引用路径同样是相对的文件地址。最终会被处理成正确的绝对地址。</p>\n"
    },
    {
      "filename": "i18n.md",
      "__html": "<h2>国际化</h2>\n<p>国际化分为两部分，分别为markdown文档的国际化和站点其余部分的国际化。</p>\n<h3>markdown文档的国际化</h3>\n<p>markdown文档主要分为说明文档和博客文档。这两种类型文档的国际化处理方式是类似的，说明文档按照中英文版本分别放入<code>docs</code>目录下的<code>zh-cn</code>和<code>en-us</code>目录中。博客文档按照中英文版本分别放入<code>blog</code>目录下的<code>zh-cn</code>和<code>en-us</code>目录中。</p>\n<h3>站点其余部分的国际化</h3>\n<p>在<code>site_config</code>目录中，根据中英文版本分别对应着<code>zh-cn</code>和<code>en-us</code>字段，所有页面相关的文案均需配置在这两个字段下。</p>\n"
    },
    {
      "filename": "installation.md",
      "__html": "<h2>安装</h2>\n<p><code>docsite</code>用于根据markdown文档快速搭建静态站点。</p>\n<ol>\n<li>确保安装的<a href=\"https://nodejs.org/en/download/\">node</a>版本满足如下要求：<code>node &gt;= 8.6.0</code></li>\n<li>执行<code>npm install docsite -g</code>执行全局安装</li>\n</ol>\n<h2>验证安装</h2>\n<p>在终端中执行 <code>docsite -V</code>，能够显示当前安装的<code>docsite</code>版本，则表示安装成功。</p>\n"
    },
    {
      "filename": "preparation.md",
      "__html": "<h2>站点准备</h2>\n<p>在成功安装完<code>docsite</code>之后，进入项目根目录，执行<code>docsite init</code>，生成的目录如下结构：</p>\n<pre><code>|-- Project root\n    |-- .babelrc\n    |-- .docsite\n    |-- .eslintrc\n    |-- .gitignore\n    |-- README.md\n    |-- gulpfile.js\n    |-- index.html\n    |-- package-lock.json\n    |-- package.json\n    |-- webpack.config.js\n    |-- blog\n    |   |-- en-us\n    |   |   |-- blog1.md\n    |   |   |-- blog2.md\n    |   |   |-- blog3.md\n    |   |   |-- blog4.md\n    |   |   |-- blog5.md\n    |   |   |-- blog6.md\n    |   |   |-- blog7.md\n    |   |-- zh-cn\n    |       |-- blog1.md\n    |       |-- blog2.md\n    |       |-- blog3.md\n    |       |-- blog4.md\n    |       |-- blog5.md\n    |       |-- blog6.md\n    |       |-- blog7.md\n    |-- docs\n    |   |-- en-us\n    |   |   |-- demo1.md\n    |   |   |-- demo2.md\n    |   |   |-- dir\n    |   |   |   |-- demo3.md\n    |   |   |-- img\n    |   |       |-- brhtqqzh.jpeg\n    |   |-- zh-cn\n    |       |-- demo1.md\n    |       |-- demo2.md\n    |       |-- dir\n    |       |   |-- demo3.md\n    |       |-- img\n    |           |-- brhtqqzh.jpeg\n    |-- img\n    |   |-- alibaba.png\n    |   |-- alibaba_hover.png\n    |   |-- architecture.png\n    |   |-- brhtqqzh.jpeg\n    |   |-- documents.png\n    |   |-- dubbo.ico\n    |   |-- dubbo_colorful.png\n    |   |-- dubbo_gray.png\n    |   |-- dubbo_white.png\n    |   |-- feature_hogh.png\n    |   |-- feature_loadbalances.png\n    |   |-- feature_maintenance.png\n    |   |-- feature_runtime.png\n    |   |-- feature_service.png\n    |   |-- feature_transpart.png\n    |   |-- issue.png\n    |   |-- mailinglist.png\n    |   |-- mailinglist_hover.png\n    |   |-- pullrequest.png\n    |   |-- quick_start.png\n    |   |-- segmentfault.png\n    |   |-- segmentfault_hover.png\n    |   |-- users_alibaba.png\n    |   |-- weibo.png\n    |   |-- weibo_hover.png\n    |   |-- system\n    |       |-- arrow_down.png\n    |       |-- arrow_right.png\n    |       |-- blog.png\n    |       |-- community.png\n    |       |-- docs.png\n    |       |-- docs_hover.png\n    |       |-- docs_normal.png\n    |       |-- menu_gray.png\n    |       |-- menu_white.png\n    |       |-- next.png\n    |       |-- prev.png\n    |-- md_json\n    |   |-- blog.json\n    |   |-- docs.json\n    |-- site_config\n    |   |-- blog.js\n    |   |-- community.jsx\n    |   |-- docs.js\n    |   |-- home.jsx\n    |   |-- site.js\n    |-- src\n    |   |-- index.jsx\n    |   |-- index.scss\n    |   |-- markdown.scss\n    |   |-- variables.scss\n    |   |-- components\n    |   |   |-- bar\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |-- footer\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |-- header\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |-- language\n    |   |   |   |-- index.jsx\n    |   |   |-- pageSlider\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |-- sidemenu\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |   |-- item.jsx\n    |   |   |-- slider\n    |   |       |-- index.jsx\n    |   |       |-- index.scss\n    |   |-- pages\n    |       |-- blog\n    |       |   |-- blogItem.jsx\n    |       |   |-- blogItem.scss\n    |       |   |-- index.jsx\n    |       |   |-- index.scss\n    |       |-- blogDetail\n    |       |   |-- index.jsx\n    |       |   |-- index.scss\n    |       |-- community\n    |       |   |-- contactItem.jsx\n    |       |   |-- contributorItem.jsx\n    |       |   |-- ecoItem.jsx\n    |       |   |-- eventCard.jsx\n    |       |   |-- index.jsx\n    |       |   |-- index.scss\n    |       |-- documentation\n    |       |   |-- index.jsx\n    |       |   |-- index.scss\n    |       |-- home\n    |           |-- featureItem.jsx\n    |           |-- index.jsx\n    |           |-- index.scss\n    |-- utils\n        |-- index.js\n</code></pre>\n<p>现从上至下对主要的文件、文件夹作说明。</p>\n<h3>.docsite</h3>\n<p>空文件，用作判断当前项目是否已初始化过。</p>\n<h3>index.html</h3>\n<p>项目的承载页面。</p>\n<h3>blog</h3>\n<p>存放博客的markdown文档及相关图片资源的目录，分为中、英文两个目录。</p>\n<h3>docs</h3>\n<p>存放说明文档的markdown文档及相关图片资源的目录，分为中、英文两个目录。</p>\n<h3>img</h3>\n<p>存放非markdown使用的一些站点的图片，其中<code>system</code>中存放一些业务无关的图片。</p>\n<h3>md_json</h3>\n<p>存放解析markdown文档结果的json文件。</p>\n<h3>site_config</h3>\n<p>存放整个站点的中英文配置数据，其中<code>site.js</code>配置全局的一些数据，包括顶部的菜单栏和底部的页脚部分。<code>home.jsx</code>、<code>docs.js</code>、<code>blog.js</code>、<code>community.jsx</code>分别对应首页、文档页、博客列表页、社区页的配置。</p>\n<h3>src</h3>\n<p>存放源码的位置，其中<code>index.jsx</code>为主入口文件，<code>markdown.scss</code>为markdown文档的样式文件，<code>variable.scss</code>为一些公共scss变量，<code>components</code>为公共组件，<code>pages</code>为对应站点的不同页面，<code>utils</code>中存放一些公共方法。</p>\n<p>现在网站的骨架搭建完成，可以进行网站的自定义和内容填充了。</p>\n"
    },
    {
      "filename": "publish.md",
      "__html": "<h2>发布站点</h2>\n<blockquote>\n<p>至此，整个站点的开发已经完成，在项目根目录下执行<code>docsite build</code>进行项目构建。</p>\n</blockquote>\n<h3>站点托管</h3>\n<p>你可以将站点托管在github pages上或者自己的服务器上。</p>\n<h4>github pages托管</h4>\n<p>在github上新建仓库，将项目代码上传至仓库中。打开项目的github页面，选择<code>Setting</code>面板，如下所示：\n<img src=\"https://img.alicdn.com/tfs/TB1rbTHxXGWBuNjy0FbXXb4sXXa-1600-134.png\" alt=\"\"></p>\n<p>转到<code>GitHuo Pages</code>版面，选择<code>Source</code>后点击<code>Save</code>，会给出站点的访问地址，访问该地址即可看到你的站点。</p>\n<p><img src=\"https://img.alicdn.com/tfs/TB1bNegxDtYBeNjy1XdXXXXyVXa-1612-1296.png\" alt=\"\"></p>\n<h4>服务器托管</h4>\n<p>将项目中的<code>build</code>目录、<code>img</code>目录、<code>index.html</code>及其他图片资源放置在服务器中即可。</p>\n"
    },
    {
      "filename": "redirect.md",
      "__html": "<h2>重定向</h2>\n<p>有时候，你希望在用户访问某些url的时候，能够跳转到另一个特定的地址。\n这些跳转的配置过程如下：</p>\n<ol>\n<li>打开<code>src</code>目录下的<code>index.jsx</code>文件，找到类似如下的代码：</li>\n</ol>\n<pre><code class=\"language-jsx\">&lt;Redirect exact <span class=\"hljs-keyword\">from</span>=<span class=\"hljs-string\">\"/docs\"</span> to=<span class=\"hljs-string\">\"/docs/installation.md\"</span> /&gt;\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Redirect</span> <span class=\"hljs-attr\">exact</span> <span class=\"hljs-attr\">from</span>=<span class=\"hljs-string\">\"/docs/\"</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">\"/docs/installation.md\"</span> /&gt;</span>\n</span></code></pre>\n<ol start=\"2\">\n<li>修改或添加对应的跳转规则。其中<code>from</code>指待跳转的地址，<code>to</code>指跳转后的地址</li>\n</ol>\n<p>整个工程采用hash路由，因此<code>from</code>和<code>to</code>的值最终会作为hash值在地址栏上体现，请以<code>/</code>作为开始。</p>\n"
    }
  ],
  "en-us": [
    {
      "filename": "addBlog.md",
      "__html": "<h2>Add blog</h2>\n<h3>Where</h3>\n<p>According to the language version of the document, put <code>zh-cn</code> or <code>en-us</code> in the <code>blog</code> directory, which can be one-level or multi-level directories.</p>\n<h3>Configuration of Blog list page</h3>\n<p>After the document is placed in the directory of the corresponding language, it needs to be configured in <code>site_config/blog.js</code>. The <code>link</code> field is used to configure the access path in the format of <code>/blog/path-to-the-md</code>. Note that this path does not include the language path (<code>zh-cn</code> or <code>en-us</code>). .</p>\n<p>For example, if a blog is stored in <code>root_directory/blog/en-us/demo/xxx.md</code>, then the configuration value of the <code>link</code> field is <code>/blog/demo/xxx.md</code>.</p>\n"
    },
    {
      "filename": "addDoc.md",
      "__html": "<h2>Add docs</h2>\n<p>Once the document is written, it needs to be added to the page.</p>\n<h3>Where</h3>\n<p>According to the language version of the document, put <code>zh-cn</code> or <code>en-us</code> in the <code>docs</code> directory, which can be one-level or multi-level directories.</p>\n<h3>Menu configuration</h3>\n<p>After the document is placed in the directory of the corresponding language, it needs to be configured in <code>site_config/docs.js</code>. The <code>link</code> field is used to configure the access path in the format of <code>/docs/path-to-the-md</code>. Note that this path does not include the language path (<code>zh-cn</code> or <code>en-us</code>).</p>\n<p>For example, if a document is stored in <code>root_directory/docs/en-us/demo/xxx.md</code>, the configuration value of the <code>link</code> field is <code>/docs/demo/xxx.md</code>.</p>\n"
    },
    {
      "filename": "commandLine.md",
      "__html": "<h2>Command line</h2>\n<p>The main commands of <code>docsite</code> are only three, mainly as follows:</p>\n<h3><code>docsite init</code></h3>\n<p>Executing this command in the project root directory will initialize a site development template and install related dependencies in the directory.</p>\n<h3><code>docsite start</code></h3>\n<p>Executing this command will start a development server locally with the port number <code>8080</code>. This page will also be automatically opened in the browser. During the development, when the source code is modified, including the markdown document, it will be automatically compiled. After refreshing the browser, you can see the updated result.。</p>\n<h3><code>docsite build</code></h3>\n<p>After the local development is completed, run this command to compile and build the source code and markdown document to generate the build file.</p>\n<h3>Others</h3>\n<p>Execute <code>docsite -h</code> for more commands</p>\n"
    },
    {
      "filename": "create.md",
      "__html": "<h2>Create site</h2>\n<blockquote>\n<p>Now you can start defining your own site.</p>\n</blockquote>\n<p>Executing the <code>docsite start</code> command in the root of the project will automatically open the page in the browser.</p>\n<p>The template project generated by the initialization integrates the home page, document page, blog list page, blog details page, community page, and Chinese and English internationalization functions by default. You can add and remove pages as you wish.</p>\n<h3>Add docs</h3>\n<ol>\n<li>Put the corresponding <code>.md</code> or <code>.markdown</code> file into the corresponding language directory under the <code>docs</code> folder,supporting multi-level directory</li>\n<li>Configure menu items for the document in <code>docs.js</code> under the <code>site_config</code> folder</li>\n</ol>\n<h3>Add blog</h3>\n<ol>\n<li>Put the corresponding <code>.md</code> or <code>.markdown</code> file into the corresponding language directory under the <code>blog</code> folder,supporting multi-level directory</li>\n<li>Configure the list item of the blog in <code>blog.js</code> under the <code>site_config</code> folder.</li>\n</ol>\n<blockquote>\n<p>The markdown file supports custom metadata at the top of the document. The data between the top <code>---</code> (at least three <code>-</code>) is considered to be metadata, and one key occupies one line. These data will be parsed in the <code>blog.json</code> and <code>docs.json</code> files in the <code>md_json</code> folder, where <code>filename</code> and <code>__html</code> are reserved fields. Do not use them.</p>\n</blockquote>\n<pre><code>---\nkey1: hello\nkey2: world\n---\n\nyour markdown content\n</code></pre>\n<h3>Customize page</h3>\n<ol>\n<li>If you want to add a page, add the corresponding page in the <code>pages</code> directory, and configure the corresponding route in the <code>index.jsx</code> file in the <code>src</code> directory. Synchronize the corresponding page configuration in the <code>site_config</code> folder.</li>\n<li>If you want to modify the page, modify the corresponding page in the <code>pages</code> directory, and modify the corresponding page configuration under the <code>site_config</code> folder</li>\n<li>If you want to delete the page, delete the corresponding page in the <code>pages</code> directory, and delete the corresponding route in the <code>index.jsx</code> file in the <code>src</code> directory. Synchronize the corresponding page configuration in the <code>site_config</code> folder.</li>\n<li>If you want to modify the overall style of the site, please modify <code>variables.scss</code> in the <code>src</code> directory.</li>\n<li>If you want to modify the style of the markdown document, please modify the <code>markdown.scss</code> in the <code>src</code> directory.</li>\n</ol>\n<h3>Page tab title and site ico</h3>\n<p>Modify the <code>&lt;title&gt; page tag title&lt;/title&gt;</code> in <code>index.html</code> in the root directory and the <code>href</code> of <code>&lt;link rel=&quot;icon&quot; href=&quot;./img/dubbo.ico&quot;&gt;</code> attributes.</p>\n"
    },
    {
      "filename": "customStyle.md",
      "__html": "<h2>Custom style</h2>\n<p>Custom styles are divided into customizations for the entire site and customization of document presentation styles.</p>\n<h3>Site customization</h3>\n<p>The <code>variables.scss</code> file in the <code>src</code> directory defines some scss variables that control the overall display style of the site. By modifying these variables, you can get different styles of sites.</p>\n<p>Of course, if you still feel not satisfied , you can go to the style file of each specific page to modify it.</p>\n<h3>Document style customization</h3>\n<p>The <code>markdown.scss</code> file in the <code>src</code> directory defines the style of the document style, which is divided into two parts, the presentation of the document and the highlighting of the code.</p>\n<ul>\n<li>document</li>\n</ul>\n<p>Github style <a href=\"https://github.com/sindresorhus/github-markdown-css\">https://github.com/sindresorhus/github-markdown-css</a> is by default , if you want other styles, please modify <code>markdown.scss</code> file.</p>\n<ul>\n<li>Code highlight</li>\n</ul>\n<p>In <a href=\"https://highlightjs.org/static/demo/\">https://highlightjs.org/static/demo/</a>, select your favorite highlight color, and then according to the selected theme name, in <a href=\"https://github.com/isagalaev/highlight.js/tree/master/src/styles\">https: //github.com/isagalaev/highlight.js/tree/master/src/styles</a> copy the corresponding style code to the <code>markdown.scss</code>.</p>\n"
    },
    {
      "filename": "doc.md",
      "__html": "<h2>Document writing</h2>\n<h3>Metadata</h3>\n<p>The markdown file supports custom metadata at the top of the document. The data between the top <code>---</code> (at least three <code>-</code>) is considered to be metadata, and one key occupies one line. After parsing the data, it will be stored in the <code>md_json</code> folder. The blog's document corresponds to the <code>blog.json</code> file. The document under docs corresponds to the <code>docs.json</code> file, where <code>filename</code> and <code>__html</code> are reserved fields. Do not use them.</p>\n<pre><code>---\nkey1: hello\nkey2: world\n---\n</code></pre>\n<h3>Path</h3>\n<p>When writing a markdown document, it is inevitable that mutual references between documents are required. The relative path is written more easily than the absolute path, and the reference between the documents in the site is more convenient.</p>\n<p>When you need to reference other documents, the reference path can be referenced by the relative file path in the project directory.</p>\n<p>Similarly, when you need to reference an image resource within a project, the reference path is also a relative file path. It will eventually be processed into the correct absolute path.</p>\n"
    },
    {
      "filename": "i18n.md",
      "__html": "<h2>I18n</h2>\n<p>Internationalization is divided into two parts, namely the internationalization of the markdown document and the internationalization of the rest of the site.</p>\n<h3>Internationalization of markdown documents</h3>\n<p>The markdown document is mainly divided into docs documents and blog documents. The internationalization of these two types of documents is similar, indicating that the documents are placed in the <code>zh-cn</code> and <code>en-us</code> directories in the <code>docs</code> directory according to the Chinese and English versions. The blog files are placed in the <code>zh-cn</code> and <code>en-us</code> directories in the <code>blog</code> directory according to the Chinese and English versions.</p>\n<h3>Internationalization of the rest of the site</h3>\n<p>In the files of <code>site_config</code> directory, the Chinese and English versions correspond to the <code>zh-cn</code> and <code>en-us</code> fields respectively, and all page-related need to be configured under these two fields.</p>\n"
    },
    {
      "filename": "installation.md",
      "__html": "<h2>Installation</h2>\n<p><code>docsite</code> is used to quickly build static sites based on markdown documents.</p>\n<ol>\n<li>Make sure the version of your <a href=\"https://nodejs.org/en/download/\">node</a> meets the requirement of <code>node &gt;= 8.6.0</code></li>\n<li>run <code>npm install docsite -g</code> to install <code>dociste</code> globally</li>\n</ol>\n<h2>Verification</h2>\n<p>Run <code>docsite -V</code> in your terminal,seeing the version of <code>docsite</code> means that it is installed successfully.</p>\n"
    },
    {
      "filename": "preparation.md",
      "__html": "<h2>Preparation</h2>\n<p>After successfully installing <code>docsite</code>,go to the project root directory and execute <code>docsite init</code>. The generated directory is as follows:</p>\n<pre><code>|-- Project root\n    |-- .babelrc\n    |-- .docsite\n    |-- .eslintrc\n    |-- .gitignore\n    |-- README.md\n    |-- gulpfile.js\n    |-- index.html\n    |-- package-lock.json\n    |-- package.json\n    |-- webpack.config.js\n    |-- blog\n    |   |-- en-us\n    |   |   |-- blog1.md\n    |   |   |-- blog2.md\n    |   |   |-- blog3.md\n    |   |   |-- blog4.md\n    |   |   |-- blog5.md\n    |   |   |-- blog6.md\n    |   |   |-- blog7.md\n    |   |-- zh-cn\n    |       |-- blog1.md\n    |       |-- blog2.md\n    |       |-- blog3.md\n    |       |-- blog4.md\n    |       |-- blog5.md\n    |       |-- blog6.md\n    |       |-- blog7.md\n    |-- docs\n    |   |-- en-us\n    |   |   |-- demo1.md\n    |   |   |-- demo2.md\n    |   |   |-- dir\n    |   |   |   |-- demo3.md\n    |   |   |-- img\n    |   |       |-- brhtqqzh.jpeg\n    |   |-- zh-cn\n    |       |-- demo1.md\n    |       |-- demo2.md\n    |       |-- dir\n    |       |   |-- demo3.md\n    |       |-- img\n    |           |-- brhtqqzh.jpeg\n    |-- img\n    |   |-- alibaba.png\n    |   |-- alibaba_hover.png\n    |   |-- architecture.png\n    |   |-- brhtqqzh.jpeg\n    |   |-- documents.png\n    |   |-- dubbo.ico\n    |   |-- dubbo_colorful.png\n    |   |-- dubbo_gray.png\n    |   |-- dubbo_white.png\n    |   |-- feature_hogh.png\n    |   |-- feature_loadbalances.png\n    |   |-- feature_maintenance.png\n    |   |-- feature_runtime.png\n    |   |-- feature_service.png\n    |   |-- feature_transpart.png\n    |   |-- issue.png\n    |   |-- mailinglist.png\n    |   |-- mailinglist_hover.png\n    |   |-- pullrequest.png\n    |   |-- quick_start.png\n    |   |-- segmentfault.png\n    |   |-- segmentfault_hover.png\n    |   |-- users_alibaba.png\n    |   |-- weibo.png\n    |   |-- weibo_hover.png\n    |   |-- system\n    |       |-- arrow_down.png\n    |       |-- arrow_right.png\n    |       |-- blog.png\n    |       |-- community.png\n    |       |-- docs.png\n    |       |-- docs_hover.png\n    |       |-- docs_normal.png\n    |       |-- menu_gray.png\n    |       |-- menu_white.png\n    |       |-- next.png\n    |       |-- prev.png\n    |-- md_json\n    |   |-- blog.json\n    |   |-- docs.json\n    |-- site_config\n    |   |-- blog.js\n    |   |-- community.jsx\n    |   |-- docs.js\n    |   |-- home.jsx\n    |   |-- site.js\n    |-- src\n    |   |-- index.jsx\n    |   |-- index.scss\n    |   |-- markdown.scss\n    |   |-- variables.scss\n    |   |-- components\n    |   |   |-- bar\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |-- footer\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |-- header\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |-- language\n    |   |   |   |-- index.jsx\n    |   |   |-- pageSlider\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |-- sidemenu\n    |   |   |   |-- index.jsx\n    |   |   |   |-- index.scss\n    |   |   |   |-- item.jsx\n    |   |   |-- slider\n    |   |       |-- index.jsx\n    |   |       |-- index.scss\n    |   |-- pages\n    |       |-- blog\n    |       |   |-- blogItem.jsx\n    |       |   |-- blogItem.scss\n    |       |   |-- index.jsx\n    |       |   |-- index.scss\n    |       |-- blogDetail\n    |       |   |-- index.jsx\n    |       |   |-- index.scss\n    |       |-- community\n    |       |   |-- contactItem.jsx\n    |       |   |-- contributorItem.jsx\n    |       |   |-- ecoItem.jsx\n    |       |   |-- eventCard.jsx\n    |       |   |-- index.jsx\n    |       |   |-- index.scss\n    |       |-- documentation\n    |       |   |-- index.jsx\n    |       |   |-- index.scss\n    |       |-- home\n    |           |-- featureItem.jsx\n    |           |-- index.jsx\n    |           |-- index.scss\n    |-- utils\n        |-- index.js\n</code></pre>\n<p>Now let's have a brief introduction to the main files and folders from up and down.</p>\n<h3>.docsite</h3>\n<p>An empty file that is used to determine if the current project has been initialized.</p>\n<h3>index.html</h3>\n<p>The hosting page of the project.</p>\n<h3>blog</h3>\n<p>The directory of the markdown document and related image resources of the blog ,which has two directories, for Chinese and English.</p>\n<h3>docs</h3>\n<p>The directory of the markdown document and related image resources of the docs ,which has two directories, for Chinese and English.</p>\n<h3>img</h3>\n<p>Store some images of site that are not used by markdown, where <code>system</code> stores some business-independent images.</p>\n<h3>md_json</h3>\n<p>Store the json file of parseing result of the markdown document.</p>\n<h3>site_config</h3>\n<p>Store Chinese and English configuration data for the entire site, where <code>site.js</code> configures some global data, including the top menu and the bottom footer portion. <code>home.jsx</code>, <code>docs.js</code>, <code>blog.js</code>, <code>community.jsx</code> correspond to the configuration of the home page, document page, blog list page, and community page respectively.</p>\n<h3>src</h3>\n<p>The location where the source code is stored, where <code>index.jsx</code> is the main entry file, <code>markdown.scss</code> stores the style file for the markdown document, <code>variable.scss</code> stores the public scss variable, <code>components</code> stores the public component, and <code>pages</code> stores the different pages of the site, <code>utils</code> stores some public methods.</p>\n<p>Now that the skeleton of the website is set up, you can customize the content and fill in the content.</p>\n"
    },
    {
      "filename": "publish.md",
      "__html": "<h2>Publish site</h2>\n<blockquote>\n<p>Now the development work of the entire site has been completed, and the project is built by executing <code>docsite build</code> in the project root directory.</p>\n</blockquote>\n<h3>Host site</h3>\n<p>You can host your site on github pages or on your own server.</p>\n<h4>github pages</h4>\n<p>Create a new repository on github and upload the project code to the repository. Open the project's github page and select the <code>Setting</code> panel as shown below:\n<img src=\"https://img.alicdn.com/tfs/TB1rbTHxXGWBuNjy0FbXXb4sXXa-1600-134.png\" alt=\"\"></p>\n<p>Go to the <code>GitHuo Pages</code> section, select <code>Source</code> and click <code>Save</code>, which will give you the address of the site. You can see your site by visiting this address.</p>\n<p><img src=\"https://img.alicdn.com/tfs/TB1bNegxDtYBeNjy1XdXXXXyVXa-1612-1296.png\" alt=\"\"></p>\n<h4>your server</h4>\n<p>Place the <code>build</code> directory, <code>img</code> directory, <code>index.html</code> and other image resources in the project on the server.</p>\n"
    },
    {
      "filename": "redirect.md",
      "__html": "<h2>Redirect</h2>\n<p>Sometimes you want to redirect to another specific address when the user accesses certain urls.\nThe configuration for these redirection is as follows:</p>\n<ol>\n<li>Open the <code>index.jsx</code> file in the <code>src</code> directory and find something like this:</li>\n</ol>\n<pre><code class=\"language-jsx\">&lt;Redirect exact <span class=\"hljs-keyword\">from</span>=<span class=\"hljs-string\">\"/docs\"</span> to=<span class=\"hljs-string\">\"/docs/installation.md\"</span> /&gt;\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Redirect</span> <span class=\"hljs-attr\">exact</span> <span class=\"hljs-attr\">from</span>=<span class=\"hljs-string\">\"/docs/\"</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">\"/docs/installation.md\"</span> /&gt;</span>\n</span></code></pre>\n<ol start=\"2\">\n<li>Modify or add the corresponding redirection rule, where <code>from</code> refers to the address to be redirected, <code>to</code> refers to the address after the redirection</li>\n</ol>\n<p>The entire project uses hash routing, so the values of <code>from</code> and <code>to</code> will eventually be reflected as hash values on the address bar. Start with <code>/</code> please.</p>\n"
    }
  ]
}